{"version":3,"file":"esri-leaflet-geocoder.js","sources":["../src/Tasks/Geocode.js","../src/Tasks/ReverseGeocode.js","../src/Tasks/Suggest.js","../src/Services/Geocode.js","../src/Classes/GeosearchCore.js","../src/Providers/ArcgisOnlineGeocoder.js","../src/Controls/Geosearch.js","../src/Providers/FeatureLayer.js","../src/Providers/MapService.js","../src/Providers/GeocodeService.js","../src/helper.js"],"sourcesContent":["import {\n  latLng,\n  latLngBounds\n} from 'leaflet';\nimport { Task, Util as EsriUtil } from 'esri-leaflet';\nimport { WorldGeocodingServiceUrl } from '../helper';\n\nexport var Geocode = Task.extend({\n  path: 'findAddressCandidates',\n\n  params: {\n    outSr: 4326,\n    forStorage: false,\n    outFields: '*',\n    maxLocations: 20\n  },\n\n  setters: {\n    'address': 'address',\n    'neighborhood': 'neighborhood',\n    'city': 'city',\n    'subregion': 'subregion',\n    'region': 'region',\n    'postal': 'postal',\n    'country': 'country',\n    'text': 'singleLine',\n    'category': 'category',\n    'token': 'token',\n    'key': 'magicKey',\n    'fields': 'outFields',\n    'forStorage': 'forStorage',\n    'maxLocations': 'maxLocations',\n    // World Geocoding Service (only works with singleLine)\n    'countries': 'sourceCountry'\n  },\n\n  initialize: function (options) {\n    options = options || {};\n    options.url = options.url || WorldGeocodingServiceUrl;\n    Task.prototype.initialize.call(this, options);\n  },\n\n  within: function (bounds) {\n    bounds = latLngBounds(bounds);\n    this.params.searchExtent = EsriUtil.boundsToExtent(bounds);\n    return this;\n  },\n\n  nearby: function (coords, radius) {\n    var centroid = latLng(coords);\n    this.params.location = centroid.lng + ',' + centroid.lat;\n    this.params.distance = Math.min(Math.max(radius, 2000), 50000);\n    return this;\n  },\n\n  run: function (callback, context) {\n    if (this.options.customParam) {\n      this.params[this.options.customParam] = this.params.singleLine;\n      delete this.params.singleLine;\n    }\n\n    return this.request(function (error, response) {\n      var processor = this._processGeocoderResponse;\n      var results = (!error) ? processor(response) : undefined;\n      callback.call(context, error, { results: results }, response);\n    }, this);\n  },\n\n  _processGeocoderResponse: function (response) {\n    var results = [];\n\n    for (var i = 0; i < response.candidates.length; i++) {\n      var candidate = response.candidates[i];\n      if (candidate.extent) {\n        var bounds = EsriUtil.extentToBounds(candidate.extent);\n      }\n\n      results.push({\n        text: candidate.address,\n        bounds: bounds,\n        score: candidate.score,\n        latlng: latLng(candidate.location.y, candidate.location.x),\n        properties: candidate.attributes\n      });\n    }\n    return results;\n  }\n});\n\nexport function geocode (options) {\n  return new Geocode(options);\n}\n\nexport default geocode;\n","import { latLng } from 'leaflet';\nimport { Task } from 'esri-leaflet';\nimport { WorldGeocodingServiceUrl } from '../helper';\n\nexport var ReverseGeocode = Task.extend({\n  path: 'reverseGeocode',\n\n  params: {\n    outSR: 4326,\n    returnIntersection: false\n  },\n\n  setters: {\n    'distance': 'distance',\n    'language': 'langCode',\n    'intersection': 'returnIntersection'\n  },\n\n  initialize: function (options) {\n    options = options || {};\n    options.url = options.url || WorldGeocodingServiceUrl;\n    Task.prototype.initialize.call(this, options);\n  },\n\n  latlng: function (coords) {\n    var centroid = latLng(coords);\n    this.params.location = centroid.lng + ',' + centroid.lat;\n    return this;\n  },\n\n  run: function (callback, context) {\n    return this.request(function (error, response) {\n      var result;\n\n      if (!error) {\n        result = {\n          latlng: latLng(response.location.y, response.location.x),\n          address: response.address\n        };\n      } else {\n        result = undefined;\n      }\n\n      callback.call(context, error, result, response);\n    }, this);\n  }\n});\n\nexport function reverseGeocode (options) {\n  return new ReverseGeocode(options);\n}\n\nexport default reverseGeocode;\n","import {\n  latLng,\n  latLngBounds\n} from 'leaflet';\nimport { Task, Util as EsriUtil } from 'esri-leaflet';\nimport { WorldGeocodingServiceUrl } from '../helper';\n\nexport var Suggest = Task.extend({\n  path: 'suggest',\n\n  params: {},\n\n  setters: {\n    text: 'text',\n    category: 'category',\n    countries: 'countryCode',\n    maxSuggestions: 'maxSuggestions'\n  },\n\n  initialize: function (options) {\n    options = options || {};\n    if (!options.url) {\n      options.url = WorldGeocodingServiceUrl;\n      options.supportsSuggest = true;\n    }\n    Task.prototype.initialize.call(this, options);\n  },\n\n  within: function (bounds) {\n    bounds = latLngBounds(bounds);\n    bounds = bounds.pad(0.5);\n    var center = bounds.getCenter();\n    var ne = bounds.getNorthWest();\n    this.params.location = center.lng + ',' + center.lat;\n    this.params.distance = Math.min(Math.max(center.distanceTo(ne), 2000), 50000);\n    this.params.searchExtent = EsriUtil.boundsToExtent(bounds);\n    return this;\n  },\n\n  nearby: function (coords, radius) {\n    var centroid = latLng(coords);\n    this.params.location = centroid.lng + ',' + centroid.lat;\n    this.params.distance = Math.min(Math.max(radius, 2000), 50000);\n    return this;\n  },\n\n  run: function (callback, context) {\n    if (this.options.supportsSuggest) {\n      return this.request(function (error, response) {\n        callback.call(context, error, response, response);\n      }, this);\n    } else {\n      console.warn('this geocoding service does not support asking for suggestions');\n    }\n  }\n\n});\n\nexport function suggest (options) {\n  return new Suggest(options);\n}\n\nexport default suggest;\n","import { Service } from 'esri-leaflet';\nimport { WorldGeocodingServiceUrl } from '../helper';\nimport geocode from '../Tasks/Geocode';\nimport reverseGeocode from '../Tasks/ReverseGeocode';\nimport suggest from '../Tasks/Suggest';\n\nexport var GeocodeService = Service.extend({\n  initialize: function (options) {\n    options = options || {};\n    if (options.url) {\n      Service.prototype.initialize.call(this, options);\n      this._confirmSuggestSupport();\n    } else {\n      options.url = WorldGeocodingServiceUrl;\n      options.supportsSuggest = true;\n      Service.prototype.initialize.call(this, options);\n    }\n  },\n\n  geocode: function () {\n    return geocode(this);\n  },\n\n  reverse: function () {\n    return reverseGeocode(this);\n  },\n\n  suggest: function () {\n    // requires either the Esri World Geocoding Service or a <10.3 ArcGIS Server Geocoding Service that supports suggest.\n    return suggest(this);\n  },\n\n  _confirmSuggestSupport: function () {\n    this.metadata(function (error, response) {\n      if (error) { return; }\n      // pre 10.3 geocoding services dont list capabilities (and dont support maxLocations)\n      // only SOME individual services have been configured to support asking for suggestions\n      if (!response.capabilities) {\n        this.options.supportsSuggest = false;\n      } else if (response.capabilities.indexOf('Suggest') > -1) {\n        this.options.supportsSuggest = true;\n      } else {\n        this.options.supportsSuggest = false;\n      }\n      // whether the service supports suggest or not, utilize the metadata response to determine the appropriate parameter name for single line geocoding requests\n      this.options.customParam = response.singleLineAddressField.name;\n    }, this);\n  }\n});\n\nexport function geocodeService (options) {\n  return new GeocodeService(options);\n}\n\nexport default geocodeService;\n","import { Evented, Util, latLngBounds } from 'leaflet';\n\nexport var GeosearchCore = Evented.extend({\n\n  options: {\n    zoomToResult: true,\n    useMapBounds: 12,\n    searchBounds: null\n  },\n\n  initialize: function (control, options) {\n    Util.setOptions(this, options);\n    this._control = control;\n\n    if (!options || !options.providers || !options.providers.length) {\n      throw new Error('You must specify at least one provider');\n    }\n\n    this._providers = options.providers;\n  },\n\n  _geocode: function (text, key, provider) {\n    var activeRequests = 0;\n    var allResults = [];\n    var bounds;\n\n    var callback = Util.bind(function (error, results) {\n      activeRequests--;\n      if (error) {\n        return;\n      }\n\n      if (results) {\n        allResults = allResults.concat(results);\n      }\n\n      if (activeRequests <= 0) {\n        bounds = this._boundsFromResults(allResults);\n\n        this.fire('results', {\n          results: allResults,\n          bounds: bounds,\n          latlng: (bounds) ? bounds.getCenter() : undefined,\n          text: text\n        }, true);\n\n        if (this.options.zoomToResult && bounds) {\n          this._control._map.fitBounds(bounds);\n        }\n\n        this.fire('load');\n      }\n    }, this);\n\n    if (key) {\n      activeRequests++;\n      provider.results(text, key, this._searchBounds(), callback);\n    } else {\n      for (var i = 0; i < this._providers.length; i++) {\n        activeRequests++;\n        this._providers[i].results(text, key, this._searchBounds(), callback);\n      }\n    }\n  },\n\n  _suggest: function (text) {\n    var activeRequests = this._providers.length;\n\n    var createCallback = Util.bind(function (text, provider) {\n      return Util.bind(function (error, suggestions) {\n        if (error) { return; }\n\n        var i;\n\n        activeRequests = activeRequests - 1;\n\n        if (text.length < 2) {\n          this._suggestions.innerHTML = '';\n          this._suggestions.style.display = 'none';\n          return;\n        }\n\n        if (suggestions.length) {\n          for (i = 0; i < suggestions.length; i++) {\n            suggestions[i].provider = provider;\n          }\n        } else {\n          // we still need to update the UI\n          this._control._renderSuggestions(suggestions);\n        }\n\n        if (provider._lastRender !== text && provider.nodes) {\n          for (i = 0; i < provider.nodes.length; i++) {\n            if (provider.nodes[i].parentElement) {\n              this._control._suggestions.removeChild(provider.nodes[i]);\n            }\n          }\n\n          provider.nodes = [];\n        }\n\n        if (suggestions.length && this._control._input.value === text) {\n          this._control.clearSuggestions(provider.nodes);\n\n          provider._lastRender = text;\n          provider.nodes = this._control._renderSuggestions(suggestions);\n          this._control._nodes = [];\n        }\n      }, this);\n    }, this);\n\n    this._pendingSuggestions = [];\n\n    for (var i = 0; i < this._providers.length; i++) {\n      var provider = this._providers[i];\n      var request = provider.suggestions(text, this._searchBounds(), createCallback(text, provider));\n      this._pendingSuggestions.push(request);\n    }\n  },\n\n  _searchBounds: function () {\n    if (this.options.searchBounds !== null) {\n      return this.options.searchBounds;\n    }\n\n    if (this.options.useMapBounds === false) {\n      return null;\n    }\n\n    if (this.options.useMapBounds === true) {\n      return this._control._map.getBounds();\n    }\n\n    if (this.options.useMapBounds <= this._control._map.getZoom()) {\n      return this._control._map.getBounds();\n    }\n\n    return null;\n  },\n\n  _boundsFromResults: function (results) {\n    if (!results.length) {\n      return;\n    }\n\n    var nullIsland = latLngBounds([0, 0], [0, 0]);\n    var resultBounds = [];\n    var resultLatlngs = [];\n\n    // collect the bounds and center of each result\n    for (var i = results.length - 1; i >= 0; i--) {\n      var result = results[i];\n\n      resultLatlngs.push(result.latlng);\n\n      // make sure bounds are valid and not 0,0. sometimes bounds are incorrect or not present\n      if (result.bounds && result.bounds.isValid() && !result.bounds.equals(nullIsland)) {\n        resultBounds.push(result.bounds);\n      }\n    }\n\n    // form a bounds object containing all center points\n    var bounds = latLngBounds(resultLatlngs);\n\n    // and extend it to contain all bounds objects\n    for (var j = 0; j < resultBounds.length; j++) {\n      bounds.extend(resultBounds[j]);\n    }\n\n    return bounds;\n  },\n\n  _getAttribution: function () {\n    var attribs = [];\n    var providers = this._providers;\n\n    for (var i = 0; i < providers.length; i++) {\n      if (providers[i].options.attribution) {\n        attribs.push(providers[i].options.attribution);\n      }\n    }\n\n    return attribs.join(', ');\n  }\n\n});\n\nexport function geosearchCore (control, options) {\n  return new GeosearchCore(control, options);\n}\n\nexport default geosearchCore;\n","import { GeocodeService } from '../Services/Geocode';\n\nexport var ArcgisOnlineProvider = GeocodeService.extend({\n  options: {\n    label: 'Places and Addresses',\n    maxResults: 5\n  },\n\n  suggestions: function (text, bounds, callback) {\n    var request = this.suggest().text(text);\n\n    if (bounds) {\n      request.within(bounds);\n    }\n\n    if (this.options.countries) {\n      request.countries(this.options.countries);\n    }\n\n    if (this.options.categories) {\n      request.category(this.options.categories);\n    }\n\n    // 15 is the maximum number of suggestions that can be returned\n    request.maxSuggestions(this.options.maxResults);\n\n    return request.run(function (error, results, response) {\n      var suggestions = [];\n      if (!error) {\n        while (response.suggestions.length && suggestions.length <= (this.options.maxResults - 1)) {\n          var suggestion = response.suggestions.shift();\n          if (!suggestion.isCollection) {\n            suggestions.push({\n              text: suggestion.text,\n              unformattedText: suggestion.text,\n              magicKey: suggestion.magicKey\n            });\n          }\n        }\n      }\n      callback(error, suggestions);\n    }, this);\n  },\n\n  results: function (text, key, bounds, callback) {\n    var request = this.geocode().text(text);\n\n    if (key) {\n      request.key(key);\n    }\n    // in the future Address/StreetName geocoding requests that include a magicKey will always only return one match\n    request.maxLocations(this.options.maxResults);\n\n    if (bounds) {\n      request.within(bounds);\n    }\n\n    if (this.options.forStorage) {\n      request.forStorage(true);\n    }\n\n    if (this.options.countries) {\n      request.countries(this.options.countries);\n    }\n\n    if (this.options.categories) {\n      request.category(this.options.categories);\n    }\n\n    return request.run(function (error, response) {\n      callback(error, response.results);\n    }, this);\n  }\n});\n\nexport function arcgisOnlineProvider (options) {\n  return new ArcgisOnlineProvider(options);\n}\n\nexport default arcgisOnlineProvider;\n","import {\n  Control,\n  DomEvent,\n  DomUtil,\n  Evented,\n  Util,\n  latLngBounds\n} from 'leaflet';\nimport { geosearchCore } from '../Classes/GeosearchCore';\nimport { arcgisOnlineProvider } from '../Providers/ArcgisOnlineGeocoder';\nimport { Util as EsriUtil } from 'esri-leaflet';\n\nexport var Geosearch = Control.extend({\n  includes: Evented.prototype,\n\n  options: {\n    position: 'topleft',\n    collapseAfterResult: true,\n    expanded: false,\n    allowMultipleResults: true,\n    placeholder: 'Search for places or addresses',\n    title: 'Location Search'\n  },\n\n  initialize: function (options) {\n    Util.setOptions(this, options);\n\n    if (!options || !options.providers || !options.providers.length) {\n      if (!options) {\n        options = {};\n      }\n      options.providers = [ arcgisOnlineProvider() ];\n    }\n\n    // instantiate the underlying class and pass along options\n    this._geosearchCore = geosearchCore(this, options);\n    this._geosearchCore._providers = options.providers;\n\n    // bubble each providers events to the control\n    this._geosearchCore.addEventParent(this);\n    for (var i = 0; i < this._geosearchCore._providers.length; i++) {\n      this._geosearchCore._providers[i].addEventParent(this);\n    }\n\n    this._geosearchCore._pendingSuggestions = [];\n\n    Control.prototype.initialize.call(options);\n  },\n\n  _renderSuggestions: function (suggestions) {\n    var currentGroup;\n\n    if (suggestions.length > 0) {\n      this._suggestions.style.display = 'block';\n    }\n    // set the maxHeight of the suggestions box to\n    // map height\n    // - suggestions offset (distance from top of suggestions to top of control)\n    // - control offset (distance from top of control to top of map)\n    // - 10 (extra padding)\n    this._suggestions.style.maxHeight = (this._map.getSize().y - this._suggestions.offsetTop - this._wrapper.offsetTop - 10) + 'px';\n\n    var nodes = [];\n    var list;\n    var header;\n    var suggestionTextArray = [];\n\n    for (var i = 0; i < suggestions.length; i++) {\n      var suggestion = suggestions[i];\n      if (!header && this._geosearchCore._providers.length > 1 && currentGroup !== suggestion.provider.options.label) {\n        header = DomUtil.create('span', 'geocoder-control-header', this._suggestions);\n        header.textContent = suggestion.provider.options.label;\n        header.innerText = suggestion.provider.options.label;\n        currentGroup = suggestion.provider.options.label;\n        nodes.push(header);\n      }\n\n      if (!list) {\n        list = DomUtil.create('ul', 'geocoder-control-list', this._suggestions);\n      }\n\n      if (suggestionTextArray.indexOf(suggestion.text) === -1) {\n        var suggestionItem = DomUtil.create('li', 'geocoder-control-suggestion', list);\n\n        suggestionItem.innerHTML = suggestion.text;\n        suggestionItem.provider = suggestion.provider;\n        suggestionItem['data-magic-key'] = suggestion.magicKey;\n        suggestionItem.unformattedText = suggestion.unformattedText;\n      } else {\n        for (var j = 0; j < list.childNodes.length; j++) {\n          // if the same text already appears in the list of suggestions, append an additional ObjectID to its magicKey instead\n          if (list.childNodes[j].innerHTML === suggestion.text) {\n            list.childNodes[j]['data-magic-key'] += ',' + suggestion.magicKey;\n          }\n        }\n      }\n      suggestionTextArray.push(suggestion.text);\n    }\n\n    DomUtil.removeClass(this._input, 'geocoder-control-loading');\n\n    nodes.push(list);\n\n    return nodes;\n  },\n\n  _boundsFromResults: function (results) {\n    if (!results.length) {\n      return;\n    }\n\n    var nullIsland = latLngBounds([0, 0], [0, 0]);\n    var resultBounds = [];\n    var resultLatlngs = [];\n\n    // collect the bounds and center of each result\n    for (var i = results.length - 1; i >= 0; i--) {\n      var result = results[i];\n\n      resultLatlngs.push(result.latlng);\n\n      // make sure bounds are valid and not 0,0. sometimes bounds are incorrect or not present\n      if (result.bounds && result.bounds.isValid() && !result.bounds.equals(nullIsland)) {\n        resultBounds.push(result.bounds);\n      }\n    }\n\n    // form a bounds object containing all center points\n    var bounds = latLngBounds(resultLatlngs);\n\n    // and extend it to contain all bounds objects\n    for (var j = 0; j < resultBounds.length; j++) {\n      bounds.extend(resultBounds[j]);\n    }\n\n    return bounds;\n  },\n\n  clear: function () {\n    this._suggestions.innerHTML = '';\n    this._suggestions.style.display = 'none';\n\n    if (this.options.collapseAfterResult) {\n      this._input.value = '';\n      this._input.placeholder = '';\n      DomUtil.removeClass(this._wrapper, 'geocoder-control-expanded');\n    }\n\n    if (!this._map.scrollWheelZoom.enabled() && this._map.options.scrollWheelZoom) {\n      this._map.scrollWheelZoom.enable();\n    }\n  },\n\n  clearSuggestions: function () {\n    if (this._nodes) {\n      for (var k = 0; k < this._nodes.length; k++) {\n        if (this._nodes[k].parentElement) {\n          this._suggestions.removeChild(this._nodes[k]);\n        }\n      }\n    }\n  },\n\n  _setupClick: function () {\n    DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n    this._input.focus();\n  },\n\n  disable: function () {\n    this._input.disabled = true;\n    DomUtil.addClass(this._input, 'geocoder-control-input-disabled');\n    DomEvent.removeListener(this._wrapper, 'click', this._setupClick, this);\n  },\n\n  enable: function () {\n    this._input.disabled = false;\n    DomUtil.removeClass(this._input, 'geocoder-control-input-disabled');\n    DomEvent.addListener(this._wrapper, 'click', this._setupClick, this);\n  },\n\n  getAttribution: function () {\n    var attribs = [];\n\n    for (var i = 0; i < this._providers.length; i++) {\n      if (this._providers[i].options.attribution) {\n        attribs.push(this._providers[i].options.attribution);\n      }\n    }\n\n    return attribs.join(', ');\n  },\n\n  geocodeSuggestion: function (e) {\n    var suggestionItem = e.target || e.srcElement;\n\n    // make sure and point at the actual 'geocoder-control-suggestion'\n    if (suggestionItem.classList.length < 1) {\n      suggestionItem = suggestionItem.parentNode;\n    }\n\n    this._geosearchCore._geocode(suggestionItem.unformattedText, suggestionItem['data-magic-key'], suggestionItem.provider);\n    this.clear();\n  },\n\n  onAdd: function (map) {\n    // include 'Powered by Esri' in map attribution\n    EsriUtil.setEsriAttribution(map);\n\n    this._map = map;\n    this._wrapper = DomUtil.create('div', 'geocoder-control');\n    this._input = DomUtil.create('input', 'geocoder-control-input leaflet-bar', this._wrapper);\n    this._input.title = this.options.title;\n\n    if (this.options.expanded) {\n      DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n      this._input.placeholder = this.options.placeholder;\n    }\n\n    this._suggestions = DomUtil.create('div', 'geocoder-control-suggestions leaflet-bar', this._wrapper);\n\n    var credits = this._geosearchCore._getAttribution();\n\n    if (map.attributionControl) {\n      map.attributionControl.addAttribution(credits);\n    }\n\n    DomEvent.addListener(this._input, 'focus', function (e) {\n      this._input.placeholder = this.options.placeholder;\n      DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n    }, this);\n\n    DomEvent.addListener(this._wrapper, 'click', this._setupClick, this);\n\n    // make sure both click and touch spawn an address/poi search\n    DomEvent.addListener(this._suggestions, 'mousedown', this.geocodeSuggestion, this);\n\n    DomEvent.addListener(this._input, 'blur', function (e) {\n      this.clear();\n    }, this);\n\n    DomEvent.addListener(this._input, 'keydown', function (e) {\n      var text = (e.target || e.srcElement).value;\n\n      DomUtil.addClass(this._wrapper, 'geocoder-control-expanded');\n\n      var list = this._suggestions.querySelectorAll('.' + 'geocoder-control-suggestion');\n      var selected = this._suggestions.querySelectorAll('.' + 'geocoder-control-selected')[0];\n      var selectedPosition;\n\n      for (var i = 0; i < list.length; i++) {\n        if (list[i] === selected) {\n          selectedPosition = i;\n          break;\n        }\n      }\n\n      switch (e.keyCode) {\n        case 13:\n          /*\n            if an item has been selected, geocode it\n            if focus is on the input textbox, geocode only if multiple results are allowed and more than two characters are present, or if a single suggestion is displayed.\n            if less than two characters have been typed, abort the geocode\n          */\n          if (selected) {\n            this._input.value = selected.innerText;\n            this._geosearchCore._geocode(selected.unformattedText, selected['data-magic-key'], selected.provider);\n            this.clear();\n          } else if (this.options.allowMultipleResults && text.length >= 2) {\n            this._geosearchCore._geocode(this._input.value, undefined);\n            this.clear();\n          } else {\n            if (list.length === 1) {\n              DomUtil.addClass(list[0], 'geocoder-control-selected');\n              this._geosearchCore._geocode(list[0].innerHTML, list[0]['data-magic-key'], list[0].provider);\n            } else {\n              this.clear();\n              this._input.blur();\n            }\n          }\n          DomEvent.preventDefault(e);\n          break;\n        case 38:\n          if (selected) {\n            DomUtil.removeClass(selected, 'geocoder-control-selected');\n          }\n\n          var previousItem = list[selectedPosition - 1];\n\n          if (selected && previousItem) {\n            DomUtil.addClass(previousItem, 'geocoder-control-selected');\n          } else {\n            DomUtil.addClass(list[list.length - 1], 'geocoder-control-selected');\n          }\n          DomEvent.preventDefault(e);\n          break;\n        case 40:\n          if (selected) {\n            DomUtil.removeClass(selected, 'geocoder-control-selected');\n          }\n\n          var nextItem = list[selectedPosition + 1];\n\n          if (selected && nextItem) {\n            DomUtil.addClass(nextItem, 'geocoder-control-selected');\n          } else {\n            DomUtil.addClass(list[0], 'geocoder-control-selected');\n          }\n          DomEvent.preventDefault(e);\n          break;\n        default:\n          // when the input changes we should cancel all pending suggestion requests if possible to avoid result collisions\n          for (var x = 0; x < this._geosearchCore._pendingSuggestions.length; x++) {\n            var request = this._geosearchCore._pendingSuggestions[x];\n            if (request && request.abort && !request.id) {\n              request.abort();\n            }\n          }\n          break;\n      }\n    }, this);\n\n    DomEvent.addListener(this._input, 'keyup', Util.throttle(function (e) {\n      var key = e.which || e.keyCode;\n      var text = (e.target || e.srcElement).value;\n\n      // require at least 2 characters for suggestions\n      if (text.length < 2) {\n        this._suggestions.innerHTML = '';\n        this._suggestions.style.display = 'none';\n        DomUtil.removeClass(this._input, 'geocoder-control-loading');\n        return;\n      }\n\n      // if this is the escape key it will clear the input so clear suggestions\n      if (key === 27) {\n        this._suggestions.innerHTML = '';\n        this._suggestions.style.display = 'none';\n        return;\n      }\n\n      // if this is NOT the up/down arrows or enter make a suggestion\n      if (key !== 13 && key !== 38 && key !== 40) {\n        if (this._input.value !== this._lastValue) {\n          this._lastValue = this._input.value;\n          DomUtil.addClass(this._input, 'geocoder-control-loading');\n          this._geosearchCore._suggest(text);\n        }\n      }\n    }, 50, this), this);\n\n    DomEvent.disableClickPropagation(this._wrapper);\n\n    // when mouse moves over suggestions disable scroll wheel zoom if its enabled\n    DomEvent.addListener(this._suggestions, 'mouseover', function (e) {\n      if (map.scrollWheelZoom.enabled() && map.options.scrollWheelZoom) {\n        map.scrollWheelZoom.disable();\n      }\n    });\n\n    // when mouse moves leaves suggestions enable scroll wheel zoom if its disabled\n    DomEvent.addListener(this._suggestions, 'mouseout', function (e) {\n      if (!map.scrollWheelZoom.enabled() && map.options.scrollWheelZoom) {\n        map.scrollWheelZoom.enable();\n      }\n    });\n\n    this._geosearchCore.on('load', function (e) {\n      DomUtil.removeClass(this._input, 'geocoder-control-loading');\n      this.clear();\n      this._input.blur();\n    }, this);\n\n    return this._wrapper;\n  }\n});\n\nexport function geosearch (options) {\n  return new Geosearch(options);\n}\n\nexport default geosearch;\n","import { Util, geoJson, latLngBounds } from 'leaflet';\nimport { FeatureLayerService } from 'esri-leaflet';\n\nexport var FeatureLayerProvider = FeatureLayerService.extend({\n  options: {\n    label: 'Feature Layer',\n    maxResults: 5,\n    bufferRadius: 1000,\n    formatSuggestion: function (feature) {\n      return feature.properties[this.options.searchFields[0]];\n    }\n  },\n\n  initialize: function (options) {\n    FeatureLayerService.prototype.initialize.call(this, options);\n    if (typeof this.options.searchFields === 'string') {\n      this.options.searchFields = [this.options.searchFields];\n    }\n    this._suggestionsQuery = this.query();\n    this._resultsQuery = this.query();\n  },\n\n  suggestions: function (text, bounds, callback) {\n    var query = this._suggestionsQuery.where(this._buildQuery(text))\n      .returnGeometry(false);\n\n    if (bounds) {\n      query.intersects(bounds);\n    }\n\n    if (this.options.idField) {\n      query.fields([this.options.idField].concat(this.options.searchFields));\n    }\n\n    var request = query.run(function (error, results, raw) {\n      if (error) {\n        callback(error, []);\n      } else {\n        this.options.idField = raw.objectIdFieldName;\n        var suggestions = [];\n        for (var i = results.features.length - 1; i >= 0; i--) {\n          var feature = results.features[i];\n          suggestions.push({\n            text: this.options.formatSuggestion.call(this, feature),\n            unformattedText: feature.properties[this.options.searchFields[0]],\n            magicKey: feature.id\n          });\n        }\n        callback(error, suggestions.slice(0, this.options.maxResults));\n      }\n    }, this);\n\n    return request;\n  },\n\n  results: function (text, key, bounds, callback) {\n    var query = this._resultsQuery;\n\n    if (key) {\n      delete query.params.where;\n      query.featureIds([key]);\n    } else {\n      query.where(this._buildQuery(text));\n    }\n\n    if (bounds) {\n      query.within(bounds);\n    }\n\n    return query.run(Util.bind(function (error, features) {\n      var results = [];\n      for (var i = 0; i < features.features.length; i++) {\n        var feature = features.features[i];\n        if (feature) {\n          var bounds = this._featureBounds(feature);\n\n          var result = {\n            latlng: bounds.getCenter(),\n            bounds: bounds,\n            text: this.options.formatSuggestion.call(this, feature),\n            properties: feature.properties,\n            geojson: feature\n          };\n\n          results.push(result);\n\n          // clear query parameters for the next search\n          delete this._resultsQuery.params['objectIds'];\n        }\n      }\n      callback(error, results);\n    }, this));\n  },\n\n  orderBy: function (fieldName, order) {\n    this._suggestionsQuery.orderBy(fieldName, order);\n  },\n\n  _buildQuery: function (text) {\n    var queryString = [];\n\n    for (var i = this.options.searchFields.length - 1; i >= 0; i--) {\n      var field = 'upper(\"' + this.options.searchFields[i] + '\")';\n\n      queryString.push(field + \" LIKE upper('%\" + text + \"%')\");\n    }\n\n    if (this.options.where) {\n      return this.options.where + ' AND (' + queryString.join(' OR ') + ')';\n    } else {\n      return queryString.join(' OR ');\n    }\n  },\n\n  _featureBounds: function (feature) {\n    var geojson = geoJson(feature);\n    if (feature.geometry.type === 'Point') {\n      var center = geojson.getBounds().getCenter();\n      var lngRadius = ((this.options.bufferRadius / 40075017) * 360) / Math.cos((180 / Math.PI) * center.lat);\n      var latRadius = (this.options.bufferRadius / 40075017) * 360;\n      return latLngBounds([center.lat - latRadius, center.lng - lngRadius], [center.lat + latRadius, center.lng + lngRadius]);\n    } else {\n      return geojson.getBounds();\n    }\n  }\n});\n\nexport function featureLayerProvider (options) {\n  return new FeatureLayerProvider(options);\n}\n\nexport default featureLayerProvider;\n","import { Util, geoJson, latLngBounds } from 'leaflet';\nimport { MapService } from 'esri-leaflet';\n\nexport var MapServiceProvider = MapService.extend({\n  options: {\n    layers: [0],\n    label: 'Map Service',\n    bufferRadius: 1000,\n    maxResults: 5,\n    formatSuggestion: function (feature) {\n      return feature.properties[feature.displayFieldName] + ' <small>' + feature.layerName + '</small>';\n    }\n  },\n\n  initialize: function (options) {\n    MapService.prototype.initialize.call(this, options);\n    this._getIdFields();\n  },\n\n  suggestions: function (text, bounds, callback) {\n    var request = this.find().text(text).fields(this.options.searchFields).returnGeometry(false).layers(this.options.layers);\n\n    return request.run(function (error, results, raw) {\n      var suggestions = [];\n      if (!error) {\n        var count = Math.min(this.options.maxResults, results.features.length);\n        raw.results = raw.results.reverse();\n        for (var i = 0; i < count; i++) {\n          var feature = results.features[i];\n          var result = raw.results[i];\n          var layer = result.layerId;\n          var idField = this._idFields[layer];\n          feature.layerId = layer;\n          feature.layerName = this._layerNames[layer];\n          feature.displayFieldName = this._displayFields[layer];\n          if (idField) {\n            suggestions.push({\n              text: this.options.formatSuggestion.call(this, feature),\n              unformattedText: feature.properties[feature.displayFieldName],\n              magicKey: result.attributes[idField] + ':' + layer\n            });\n          }\n        }\n      }\n      callback(error, suggestions.reverse());\n    }, this);\n  },\n\n  results: function (text, key, bounds, callback) {\n    var results = [];\n    var request;\n\n    if (key) {\n      var featureId = key.split(':')[0];\n      var layer = key.split(':')[1];\n      request = this.query().layer(layer).featureIds(featureId);\n    } else {\n      request = this.find().text(text).fields(this.options.searchFields).layers(this.options.layers);\n    }\n\n    return request.run(function (error, features, response) {\n      if (!error) {\n        if (response.results) {\n          response.results = response.results.reverse();\n        }\n        for (var i = 0; i < features.features.length; i++) {\n          var feature = features.features[i];\n          layer = layer || response.results[i].layerId;\n\n          if (feature && layer !== undefined) {\n            var bounds = this._featureBounds(feature);\n            feature.layerId = layer;\n            feature.layerName = this._layerNames[layer];\n            feature.displayFieldName = this._displayFields[layer];\n\n            var result = {\n              latlng: bounds.getCenter(),\n              bounds: bounds,\n              text: this.options.formatSuggestion.call(this, feature),\n              properties: feature.properties,\n              geojson: feature\n            };\n\n            results.push(result);\n          }\n        }\n      }\n      callback(error, results.reverse());\n    }, this);\n  },\n\n  _featureBounds: function (feature) {\n    var geojson = geoJson(feature);\n    if (feature.geometry.type === 'Point') {\n      var center = geojson.getBounds().getCenter();\n      var lngRadius = ((this.options.bufferRadius / 40075017) * 360) / Math.cos((180 / Math.PI) * center.lat);\n      var latRadius = (this.options.bufferRadius / 40075017) * 360;\n      return latLngBounds([center.lat - latRadius, center.lng - lngRadius], [center.lat + latRadius, center.lng + lngRadius]);\n    } else {\n      return geojson.getBounds();\n    }\n  },\n\n  _layerMetadataCallback: function (layerid) {\n    return Util.bind(function (error, metadata) {\n      if (error) { return; }\n      this._displayFields[layerid] = metadata.displayField;\n      this._layerNames[layerid] = metadata.name;\n      for (var i = 0; i < metadata.fields.length; i++) {\n        var field = metadata.fields[i];\n        if (field.type === 'esriFieldTypeOID') {\n          this._idFields[layerid] = field.name;\n          break;\n        }\n      }\n    }, this);\n  },\n\n  _getIdFields: function () {\n    this._idFields = {};\n    this._displayFields = {};\n    this._layerNames = {};\n    for (var i = 0; i < this.options.layers.length; i++) {\n      var layer = this.options.layers[i];\n      this.get(layer, {}, this._layerMetadataCallback(layer));\n    }\n  }\n});\n\nexport function mapServiceProvider (options) {\n  return new MapServiceProvider(options);\n}\n\nexport default mapServiceProvider;\n","import { GeocodeService } from '../Services/Geocode';\n\nexport var GeocodeServiceProvider = GeocodeService.extend({\n  options: {\n    label: 'Geocode Server',\n    maxResults: 5\n  },\n\n  suggestions: function (text, bounds, callback) {\n    if (this.options.supportsSuggest) {\n      var request = this.suggest().text(text);\n      if (bounds) {\n        request.within(bounds);\n      }\n\n      return request.run(function (error, results, response) {\n        var suggestions = [];\n        if (!error) {\n          while (response.suggestions.length && suggestions.length <= (this.options.maxResults - 1)) {\n            var suggestion = response.suggestions.shift();\n            if (!suggestion.isCollection) {\n              suggestions.push({\n                text: suggestion.text,\n                unformattedText: suggestion.text,\n                magicKey: suggestion.magicKey\n              });\n            }\n          }\n        }\n        callback(error, suggestions);\n      }, this);\n    } else {\n      callback(undefined, []);\n      return false;\n    }\n  },\n\n  results: function (text, key, bounds, callback) {\n    var request = this.geocode().text(text);\n\n    if (key) {\n      request.key(key);\n    }\n\n    request.maxLocations(this.options.maxResults);\n\n    if (bounds) {\n      request.within(bounds);\n    }\n\n    return request.run(function (error, response) {\n      callback(error, response.results);\n    }, this);\n  }\n});\n\nexport function geocodeServiceProvider (options) {\n  return new GeocodeServiceProvider(options);\n}\n\nexport default geocodeServiceProvider;\n","export var WorldGeocodingServiceUrl = 'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/';\n"],"names":["geocode","options","Geocode","reverseGeocode","ReverseGeocode","suggest","Suggest","geocodeService","GeocodeService","geosearchCore","control","GeosearchCore","arcgisOnlineProvider","ArcgisOnlineProvider","geosearch","Geosearch","featureLayerProvider","FeatureLayerProvider","mapServiceProvider","MapServiceProvider","geocodeServiceProvider","GeocodeServiceProvider","WorldGeocodingServiceUrl","Task","extend","path","params","outSr","forStorage","outFields","maxLocations","setters","address","neighborhood","city","subregion","region","postal","country","text","category","token","key","fields","countries","initialize","url","prototype","call","this","within","bounds","latLngBounds","searchExtent","EsriUtil","boundsToExtent","nearby","coords","radius","centroid","latLng","location","lng","lat","distance","Math","min","max","run","callback","context","customParam","singleLine","request","error","response","processor","_processGeocoderResponse","results","undefined","i","candidates","length","candidate","extent","extentToBounds","push","score","latlng","y","x","properties","attributes","outSR","returnIntersection","language","intersection","result","maxSuggestions","supportsSuggest","pad","center","getCenter","ne","getNorthWest","distanceTo","console","warn","Service","_confirmSuggestSupport","reverse","metadata","capabilities","indexOf","singleLineAddressField","name","Evented","zoomToResult","useMapBounds","searchBounds","Util","setOptions","_control","providers","Error","_providers","_geocode","provider","activeRequests","allResults","bind","concat","_boundsFromResults","fire","_map","fitBounds","_searchBounds","_suggest","createCallback","suggestions","_suggestions","innerHTML","style","display","_renderSuggestions","_lastRender","nodes","parentElement","removeChild","_input","value","clearSuggestions","_nodes","_pendingSuggestions","getBounds","getZoom","nullIsland","resultBounds","resultLatlngs","isValid","equals","j","_getAttribution","attribs","attribution","join","label","maxResults","categories","suggestion","shift","isCollection","unformattedText","magicKey","Control","includes","position","collapseAfterResult","expanded","allowMultipleResults","placeholder","title","_geosearchCore","addEventParent","currentGroup","maxHeight","getSize","offsetTop","_wrapper","list","header","suggestionTextArray","DomUtil","create","textContent","innerText","suggestionItem","childNodes","removeClass","clear","scrollWheelZoom","enabled","enable","k","_setupClick","addClass","focus","disable","disabled","DomEvent","removeListener","addListener","getAttribution","geocodeSuggestion","e","target","srcElement","classList","parentNode","onAdd","map","setEsriAttribution","credits","attributionControl","addAttribution","selectedPosition","querySelectorAll","selected","keyCode","blur","preventDefault","previousItem","nextItem","abort","id","throttle","which","_lastValue","disableClickPropagation","on","FeatureLayerService","bufferRadius","formatSuggestion","feature","searchFields","_suggestionsQuery","query","_resultsQuery","where","_buildQuery","returnGeometry","intersects","idField","raw","objectIdFieldName","features","slice","featureIds","_featureBounds","geojson","orderBy","fieldName","order","queryString","field","geoJson","geometry","type","lngRadius","cos","PI","latRadius","MapService","layers","displayFieldName","layerName","_getIdFields","find","count","layer","layerId","_idFields","_layerNames","_displayFields","featureId","split","_layerMetadataCallback","layerid","displayField","get"],"mappings":"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"}